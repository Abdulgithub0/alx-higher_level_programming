Test for area function
======================
::
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> test1 = BaseGeometry()
	>>> test1.area()
	Traceback (most recent call last):
	....
	Exception: area() is not implemented

::
	>>> test1.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

::
	>>> test1.area(100)
        Traceback (most recent call last):
	...
        TypeError: BaseGeometry.area() takes 1 positional argument but 2 were given




Test for integer_validator
===========================
::
	>>> test2 = BaseGeometry()
	>>> test2.integer_validator('Abdul', 100)
	>>> test2.integer_validator('Abdul', 'age')
	Traceback (most recent call last):
	...
	TypeError: Abdul must be an integer


	>>> test2.integer_validator('Abdul', 0)
	Traceback (most recent call last):
	...
	ValueError: Abdul must be greater than 0


	>>> test2.integer_validator(1, 3)
	>>>

::
	>>> test2.integer_validator('Abdul', -9)
	Traceback (most recent call last):
        ...
        ValueError: Abdul must be greater than 0


Test for empty argument
=======================
::
	>>> test2.integer_validator('name', 1.3)
	Traceback (most recent call last):
	...
	TypeError: name must be an integer

::
	>>> test2.integer_validator('name')
	Traceback (most recent call last):
	...
	TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

::
	>>> test2.integer_validator('make', 1, 8)
	Traceback (most recent call last):
        ...
	TypeError: BaseGeometry.integer_validator() takes 3 positional arguments but 4 were given

::
	>>> test2.integer_validator()
	Traceback (most recent call last):
        ...
	TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'
