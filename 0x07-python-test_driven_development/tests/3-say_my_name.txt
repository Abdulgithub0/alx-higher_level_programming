===============================
 How to Use say_my_name()
===============================

This library is very simple, since it only has one function called
``matrix_divided``.

Numbers
=======

``say_my_name()`` print out its two arguments.

::

    >>> name = __import__('3-say_my_name').say_my_name
    >>> name("Alx", "Africa")
    My name is Alx Africa

It cannot works with any class instances except string instances.

::

    >>> name("Elon", 'Musk')
    My name is Elon Musk

Non-Strings
============

''say_my_name()'' raise exception when encounter other objects aside
string or called with no arguments.

::

    >>> name(97, "grade")
    Traceback (most recent call last):
    TypeError: first_name must be a string

    >>> my_list = [1, 2, 3]
    >>> name("fourth", my_list)
    Traceback (most recent call last):
    TypeError: last_name must be a string
    
    >>> name("Abdul") #doctest: +NORMALIZE_WHITESPACE
    My name is Abdul

    >>> name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
