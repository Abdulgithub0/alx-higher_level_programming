===================================
 How to Use text_indentation(text)
===================================

This library is very simple, since it only has one function called
``text_indentation(text)``.

Numbers
=======

``text_indentation(text)`` print out the parameter text to the console.

::

    >>> text_indentation = __import__('5-text_indentation').text_indentation
    >>> text = """Lorem ipsum dolor sit amet, consectetur adipiscing elit. \
    ... Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? \
    ... Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: \
    ... Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. \
    ... Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum \
    ... rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo \
    ... stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum \
    ... cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio \
    ... beatiorem! Iam ruinas videres"""
    >>> text_indentation(text)
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    <BLANKLINE>
    Quonam modo?
    <BLANKLINE>
    Utrum igitur tibi litteram videor an totas paginas commovere?
    <BLANKLINE>
    Non autem hoc:
    <BLANKLINE>
    igitur ne illud quidem.
    <BLANKLINE>
    Fortasse id optimum, sed ubi illud:
    <BLANKLINE>
    Plus semper voluptatis?
    <BLANKLINE>
    Teneo, inquit, finem illi videri nihil dolere.
    <BLANKLINE>
    Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
    <BLANKLINE>
    Si id dicis, vicimus.
    <BLANKLINE>
    Inde sermone vario sex illa a Dipylo stadia confecimus.
    <BLANKLINE>
    Sin aliud quid voles, postea.
    <BLANKLINE>
    Quae animi affectio suum cuique tribuens atque hanc, quam dico.
    <BLANKLINE>
    Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

It cannot works with any class instances except instances of string 'str' class.

::

    >>> text_indentation("No full-stop or colon or exclamation mark in this text")
    No full-stop or colon or exclamation mark in this text

Non-Strings
============

''print_square()'' raise exception when encounter other objects aside
int and float or called with no arguments.

::

    >>> text_indentation(100)
    Traceback (most recent call last):
    TypeError: text must be a string

    >>> my_list = [1, 2, 3]
    >>> text_indentation("text", my_list)
    Traceback (most recent call last):
    TypeError: text_indentation() takes 1 positional argument but 2 were given
    
    >>> text_indentation("  I'm coming please   ") #doctest: +NORMALIZE_WHITESPACE
      I'm coming please
    >>> text_indentation()
    Traceback (most recent call last):
    TypeError: text_indentation() missing 1 required positional argument: 'text'
